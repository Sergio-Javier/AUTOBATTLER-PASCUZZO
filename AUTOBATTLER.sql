-- CREACION DE LA BASE DE DATOS  Y LO BORRA SI ES QUE
-- EXISTE ESA BASE DE DATOS

DROP DATABASE IF EXISTS AUTOBATTLER ;

CREATE DATABASE AUTOBATTLER ; 

USE AUTOBATTLER ;

-- CREAR TABLAS EN LA DB

CREATE TABLE REGISTRO_DE_PARTIDA (
	ID_REG INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FECHA_HORA DATETIME,
    ID_SALA INT NOT NULL,
    ID_USER INT
    
    );
    
CREATE TABLE USUARIO (
	ID_USER INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(25) NOT NULL,
    APELLIDO VARCHAR(25) NOT NULL,
    FECHA_NACIMIENTO DATE,
    CORREO VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(25) NOT NULL,
    NICK VARCHAR(25) NOT NULL UNIQUE,
    NIVEL_USER INT,
    PUNTOS_CLASIF INT,
    CONECTADO BOOLEAN,
    ID_CONFIG INT,
    ID_USER_ INT
    );
    
    -- POR RAZONES PRACTICAS SE DEJA LOS VALORES DE LAS COLUMNAS CONFIG COMO BOOLEAN
CREATE TABLE CONFIGURACION (
	ID_CONFIG INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE_CONFIG VARCHAR(25) ,
    CONFIG_VIDEO BOOLEAN /*LAS CONFIG SE CONSIDERAN COMO BOOLEANAS POR EL MOMETO POR RAZONES PRACTICAS*/,
    CONFIG_SONIDO BOOLEAN /*LAS CONFIG SE CONSIDERAN COMO BOOLEANAS POR EL MOMETO POR RAZONES PRACTICAS*/,
    CONFIG_KEYWORD BOOLEAN /*LAS CONFIG SE CONSIDERAN COMO BOOLEANAS POR EL MOMETO POR RAZONES PRACTICAS*/
    );
    
CREATE TABLE AMIGOS (
	ID_USER_ INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NICK_AMIGO VARCHAR(25) ,
    CONECTADO BOOLEAN
    );

CREATE TABLE PARTIDA (
	ID_SALA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIEMPO_DE_PARTIDA TIME,
    ID_ESTADISTICA INT NOT NULL,
    ID_MODO INT NOT NULL,
    ID_UNIDAD INT,
    ID_MISION INT,
    PUNTOS_CLASIF_OBTENIDO INT,
    NIVEL_EXP_OBTENIDO INT,
    ORO INT,
    NIVEL INT,
    PUNTOS_DE_VIDA TIME
    );
    
CREATE TABLE ESTADISTICAS (
	ID_ESTADISTICA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    POSICION INT(1) COMMENT "DEL 1 AL 8" ,
    NIVEL_ALCANZADO INT(1) COMMENT "DEL 1 AL 9",
    UNIDADES_COMPRADAS INT(1) COMMENT "DEL 1 AL 9"
    );

CREATE TABLE UNIDAD (
	ID_UNIDAD INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(25),
    COSTO INT(1),
    RANGO_PRINCIPAL VARCHAR(25),
    RANGO_SECUNDARIO VARCHAR(25),
    DAÑO INT,
    DEFENSA INT,
    VIDA int
    );
    
CREATE TABLE MODO_DE_JUEGO (
	ID_MODO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIPO_MODO VARCHAR(25),
    GANA_NIVEL_EXP INT,
    GANA_PUNTOS_CLASIF INT
    );
    
CREATE TABLE MISIONES (
	ID_MISION INT PRIMARY KEY NOT NULL AUTO_INCREMENT, 
    TIPO_DE_MISION VARCHAR(25),
    TITULO VARCHAR(25),
    DESCRIPCIÓN VARCHAR(100),
    RECOMPENSA VARCHAR(25)
    );

CREATE TABLE PRODUCTO (
	ID_PRODUCTO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    TIPO_PRODUCTO VARCHAR(25),
    VALOR DECIMAL(5,2)
    );
    
CREATE TABLE FACTURA (
	ID_TRANSACCION INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_PRODUCTO INT ,
    ID_USER INT,
    EMAIL VARCHAR(100),
    NICK VARCHAR (25),
    CANTIDAD_PRODUCTO INT,
    TOTAL_PAGAR DECIMAL(5,2),
    MEDIO_DE_PAGO VARCHAR(100),
    COMPLETADO BOOLEAN DEFAULT FALSE
    );

-- CREACIÓN DE LAS FOREING KEY

-- FK EN REGISTRO_DE_PARTIDA (REFERENCE:PARTIDA)
ALTER TABLE REGISTRO_DE_PARTIDA
	ADD CONSTRAINT FK_REG_ID_SALA
    FOREIGN KEY FK_REG_ID_SALA (ID_SALA) REFERENCES PARTIDA (ID_SALA) ;

-- REFERENCE:PARTIDA)
ALTER TABLE REGISTRO_DE_PARTIDA
	ADD CONSTRAINT FK_REG_ID_USER
    FOREIGN KEY FK_REG_ID_USER (ID_USER) REFERENCES USUARIO (ID_USER) ;

-- FK EN PARTIDA (REFERENCE: MODO_DE_JUEGO)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_MODO
    FOREIGN KEY FK_PARTIDA_ID_MODO (ID_MODO) REFERENCES MODO_DE_JUEGO (ID_MODO) ;
    
-- (REFENRENCE: ESTADISTICAS)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_ESTADISTICA
    FOREIGN KEY FK_PARTIDA_ID_ESTADISTICA (ID_ESTADISTICA) REFERENCES ESTADISTICAS (ID_ESTADISTICA) ;

-- (REFERENCE: UNIDAD)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_UNIDAD
    FOREIGN KEY FK_PARTIDA_ID_UNIDAD (ID_UNIDAD) REFERENCES UNIDAD (ID_UNIDAD) ;
    
-- (REFERENCE: MISIONES)
ALTER TABLE PARTIDA
	ADD CONSTRAINT FK_PARTIDA_ID_MISION
    FOREIGN KEY FK_PARTIDA_ID_MISION (ID_MISION) REFERENCES MISIONES (ID_MISION) ;
    
-- FK EN FACTURA (REFERENCE:PRODUCTO)
ALTER TABLE FACTURA
	ADD CONSTRAINT FK_FACT_ID_PRODUCTO
    FOREIGN KEY FK_FACT_ID_PRODUCTO (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO) ;

-- (REFERENCE: USUARIO)
ALTER TABLE FACTURA
	ADD CONSTRAINT FK_FACT_ID_USER
    FOREIGN KEY FK_FACT_ID_USER (ID_PRODUCTO) REFERENCES USUARIO (ID_USER) ;

-- FK EN USUARIO (REFERENCE: CONFIGURACION)
ALTER TABLE USUARIO
	ADD CONSTRAINT FK_USER_ID_CONFIG
    FOREIGN KEY FK_USER_ID_CONFIG (ID_CONFIG) REFERENCES CONFIGURACION (ID_CONFIG) ;

-- (REFERENCE: AMIGOS)
ALTER TABLE USUARIO
	ADD CONSTRAINT FK_USER_ID_USER_
    FOREIGN KEY FK_USER_ID_USER_ (ID_USER_) REFERENCES AMIGOS (ID_USER_) ;
